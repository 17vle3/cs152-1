Grammar

    0 $accept: program $end

    1 program: function program
    2        | /* empty */

    3 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS decl_loop END_PARAMS BEGIN_LOCALS decl_loop END_LOCALS BEGIN_BODY statement SEMICOLON function_2

    4 function_2: statement SEMICOLON function_2
    5           | END_BODY

    6 decl_loop: declaration SEMICOLON decl_loop
    7          | /* empty */

    8 stmt_loop: statement SEMICOLON stmt_loop
    9          | /* empty */

   10 declaration: IDENT declaration_2

   11 declaration_2: COMMA IDENT declaration_2
   12              | COLON declaration_3 INTEGER

   13 declaration_3: ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF
   14              | /* empty */

   15 statement: statement_1
   16          | statement_2
   17          | statement_3
   18          | statement_4
   19          | statement_5
   20          | statement_6
   21          | CONTINUE
   22          | RETURN expression

   23 statement_1: var ASSIGN expression

   24 statement_2: IF bool_exp THEN stmt_loop statement_21 ENDIF

   25 statement_21: /* empty */
   26             | ELSE stmt_loop

   27 statement_3: WHILE bool_exp BEGINLOOP stmt_loop ENDLOOP

   28 statement_4: DO BEGINLOOP stmt_loop ENDLOOP WHILE bool_exp

   29 statement_5: READ var statement_51

   30 statement_51: COMMA var statement_51
   31             | /* empty */

   32 statement_6: WRITE var statement_61

   33 statement_61: COMMA var statement_61
   34             | /* empty */

   35 bool_exp: rel_and_exp bool_exp2

   36 bool_exp2: OR rel_and_exp bool_exp2
   37          | /* empty */

   38 rel_and_exp: relation_exp rel_and_exp2

   39 rel_and_exp2: AND relation_exp rel_and_exp2
   40             | /* empty */

   41 relation_exp: relation_exp_s
   42             | NOT relation_exp_s

   43 relation_exp_s: expression comp expression
   44               | TRUE
   45               | FALSE
   46               | L_PAREN bool_exp R_PAREN

   47 comp: EQ
   48     | NEQ
   49     | LT
   50     | GT
   51     | LTE
   52     | GTE

   53 expression: mult_expr expression_2

   54 expression_2: ADD mult_expr expression_2
   55             | SUB mult_expr expression_2
   56             | /* empty */

   57 mult_expr: term mult_expr_2

   58 mult_expr_2: MULT term mult_expr_2
   59            | DIV term mult_expr_2
   60            | MOD term mult_expr_2
   61            | /* empty */

   62 term: SUB term_2
   63     | term_2
   64     | term_3

   65 term_2: var
   66       | NUMBER
   67       | L_PAREN expression R_PAREN

   68 term_3: IDENT L_PAREN term_31 R_PAREN

   69 term_31: expression term_32
   70        | /* empty */

   71 term_32: COMMA term_31
   72        | /* empty */

   73 var: IDENT var_2

   74 var_2: L_SQUARE_BRACKET expression R_SQUARE_BRACKET
   75      | /* empty */


Terminals, with rules where they appear

$end (0) 0
error (256)
FUNCTION (258) 3
BEGIN_PARAMS (259) 3
END_PARAMS (260) 3
BEGIN_LOCALS (261) 3
END_LOCALS (262) 3
BEGIN_BODY (263) 3
END_BODY (264) 5
INTEGER (265) 12
ARRAY (266) 13
OF (267) 13
IF (268) 24
THEN (269) 24
ENDIF (270) 24
ELSE (271) 26
WHILE (272) 27 28
DO (273) 28
BEGINLOOP (274) 27 28
ENDLOOP (275) 27 28
CONTINUE (276) 21
READ (277) 29
WRITE (278) 32
RETURN (279) 22
AND (280) 39
OR (281) 36
NOT (282) 42
TRUE (283) 44
FALSE (284) 45
SUB (285) 55 62
ADD (286) 54
MULT (287) 58
DIV (288) 59
MOD (289) 60
EQ (290) 47
NEQ (291) 48
LT (292) 49
GT (293) 50
LTE (294) 51
GTE (295) 52
SEMICOLON (296) 3 4 6 8
COLON (297) 12
COMMA (298) 11 30 33 71
L_PAREN (299) 46 67 68
R_PAREN (300) 46 67 68
L_SQUARE_BRACKET (301) 13 74
R_SQUARE_BRACKET (302) 13 74
ASSIGN (303) 23
NUMBER (304) 13 66
IDENT (305) 3 10 11 68 73


Nonterminals, with rules where they appear

$accept (51)
    on left: 0
program (52)
    on left: 1 2, on right: 0 1
function (53)
    on left: 3, on right: 1
function_2 (54)
    on left: 4 5, on right: 3 4
decl_loop (55)
    on left: 6 7, on right: 3 6
stmt_loop (56)
    on left: 8 9, on right: 8 24 26 27 28
declaration (57)
    on left: 10, on right: 6
declaration_2 (58)
    on left: 11 12, on right: 10 11
declaration_3 (59)
    on left: 13 14, on right: 12
statement (60)
    on left: 15 16 17 18 19 20 21 22, on right: 3 4 8
statement_1 (61)
    on left: 23, on right: 15
statement_2 (62)
    on left: 24, on right: 16
statement_21 (63)
    on left: 25 26, on right: 24
statement_3 (64)
    on left: 27, on right: 17
statement_4 (65)
    on left: 28, on right: 18
statement_5 (66)
    on left: 29, on right: 19
statement_51 (67)
    on left: 30 31, on right: 29 30
statement_6 (68)
    on left: 32, on right: 20
statement_61 (69)
    on left: 33 34, on right: 32 33
bool_exp (70)
    on left: 35, on right: 24 27 28 46
bool_exp2 (71)
    on left: 36 37, on right: 35 36
rel_and_exp (72)
    on left: 38, on right: 35 36
rel_and_exp2 (73)
    on left: 39 40, on right: 38 39
relation_exp (74)
    on left: 41 42, on right: 38 39
relation_exp_s (75)
    on left: 43 44 45 46, on right: 41 42
comp (76)
    on left: 47 48 49 50 51 52, on right: 43
expression (77)
    on left: 53, on right: 22 23 43 67 69 74
expression_2 (78)
    on left: 54 55 56, on right: 53 54 55
mult_expr (79)
    on left: 57, on right: 53 54 55
mult_expr_2 (80)
    on left: 58 59 60 61, on right: 57 58 59 60
term (81)
    on left: 62 63 64, on right: 57 58 59 60
term_2 (82)
    on left: 65 66 67, on right: 62 63
term_3 (83)
    on left: 68, on right: 64
term_31 (84)
    on left: 69 70, on right: 68 71
term_32 (85)
    on left: 71 72, on right: 69
var (86)
    on left: 73, on right: 23 29 30 32 33 65
var_2 (87)
    on left: 74 75, on right: 73


State 0

    0 $accept: . program $end

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 2 (program)

    program   go to state 2
    function  go to state 3


State 1

    3 function: FUNCTION . IDENT SEMICOLON BEGIN_PARAMS decl_loop END_PARAMS BEGIN_LOCALS decl_loop END_LOCALS BEGIN_BODY statement SEMICOLON function_2

    IDENT  shift, and go to state 4


State 2

    0 $accept: program . $end

    $end  shift, and go to state 5


State 3

    1 program: function . program

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 2 (program)

    program   go to state 6
    function  go to state 3


State 4

    3 function: FUNCTION IDENT . SEMICOLON BEGIN_PARAMS decl_loop END_PARAMS BEGIN_LOCALS decl_loop END_LOCALS BEGIN_BODY statement SEMICOLON function_2

    SEMICOLON  shift, and go to state 7


State 5

    0 $accept: program $end .

    $default  accept


State 6

    1 program: function program .

    $default  reduce using rule 1 (program)


State 7

    3 function: FUNCTION IDENT SEMICOLON . BEGIN_PARAMS decl_loop END_PARAMS BEGIN_LOCALS decl_loop END_LOCALS BEGIN_BODY statement SEMICOLON function_2

    BEGIN_PARAMS  shift, and go to state 8


State 8

    3 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS . decl_loop END_PARAMS BEGIN_LOCALS decl_loop END_LOCALS BEGIN_BODY statement SEMICOLON function_2

    IDENT  shift, and go to state 9

    $default  reduce using rule 7 (decl_loop)

    decl_loop    go to state 10
    declaration  go to state 11


State 9

   10 declaration: IDENT . declaration_2

    COLON  shift, and go to state 12
    COMMA  shift, and go to state 13

    declaration_2  go to state 14


State 10

    3 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS decl_loop . END_PARAMS BEGIN_LOCALS decl_loop END_LOCALS BEGIN_BODY statement SEMICOLON function_2

    END_PARAMS  shift, and go to state 15


State 11

    6 decl_loop: declaration . SEMICOLON decl_loop

    SEMICOLON  shift, and go to state 16


State 12

   12 declaration_2: COLON . declaration_3 INTEGER

    ARRAY  shift, and go to state 17

    $default  reduce using rule 14 (declaration_3)

    declaration_3  go to state 18


State 13

   11 declaration_2: COMMA . IDENT declaration_2

    IDENT  shift, and go to state 19


State 14

   10 declaration: IDENT declaration_2 .

    $default  reduce using rule 10 (declaration)


State 15

    3 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS decl_loop END_PARAMS . BEGIN_LOCALS decl_loop END_LOCALS BEGIN_BODY statement SEMICOLON function_2

    BEGIN_LOCALS  shift, and go to state 20


State 16

    6 decl_loop: declaration SEMICOLON . decl_loop

    IDENT  shift, and go to state 9

    $default  reduce using rule 7 (decl_loop)

    decl_loop    go to state 21
    declaration  go to state 11


State 17

   13 declaration_3: ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF

    L_SQUARE_BRACKET  shift, and go to state 22


State 18

   12 declaration_2: COLON declaration_3 . INTEGER

    INTEGER  shift, and go to state 23


State 19

   11 declaration_2: COMMA IDENT . declaration_2

    COLON  shift, and go to state 12
    COMMA  shift, and go to state 13

    declaration_2  go to state 24


State 20

    3 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS decl_loop END_PARAMS BEGIN_LOCALS . decl_loop END_LOCALS BEGIN_BODY statement SEMICOLON function_2

    IDENT  shift, and go to state 9

    $default  reduce using rule 7 (decl_loop)

    decl_loop    go to state 25
    declaration  go to state 11


State 21

    6 decl_loop: declaration SEMICOLON decl_loop .

    $default  reduce using rule 6 (decl_loop)


State 22

   13 declaration_3: ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF

    NUMBER  shift, and go to state 26


State 23

   12 declaration_2: COLON declaration_3 INTEGER .

    $default  reduce using rule 12 (declaration_2)


State 24

   11 declaration_2: COMMA IDENT declaration_2 .

    $default  reduce using rule 11 (declaration_2)


State 25

    3 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS decl_loop END_PARAMS BEGIN_LOCALS decl_loop . END_LOCALS BEGIN_BODY statement SEMICOLON function_2

    END_LOCALS  shift, and go to state 27


State 26

   13 declaration_3: ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF

    R_SQUARE_BRACKET  shift, and go to state 28


State 27

    3 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS decl_loop END_PARAMS BEGIN_LOCALS decl_loop END_LOCALS . BEGIN_BODY statement SEMICOLON function_2

    BEGIN_BODY  shift, and go to state 29


State 28

   13 declaration_3: ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF

    OF  shift, and go to state 30


State 29

    3 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS decl_loop END_PARAMS BEGIN_LOCALS decl_loop END_LOCALS BEGIN_BODY . statement SEMICOLON function_2

    IF        shift, and go to state 31
    WHILE     shift, and go to state 32
    DO        shift, and go to state 33
    CONTINUE  shift, and go to state 34
    READ      shift, and go to state 35
    WRITE     shift, and go to state 36
    RETURN    shift, and go to state 37
    IDENT     shift, and go to state 38

    statement    go to state 39
    statement_1  go to state 40
    statement_2  go to state 41
    statement_3  go to state 42
    statement_4  go to state 43
    statement_5  go to state 44
    statement_6  go to state 45
    var          go to state 46


State 30

   13 declaration_3: ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF .

    $default  reduce using rule 13 (declaration_3)


State 31

   24 statement_2: IF . bool_exp THEN stmt_loop statement_21 ENDIF

    NOT      shift, and go to state 47
    TRUE     shift, and go to state 48
    FALSE    shift, and go to state 49
    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 51
    NUMBER   shift, and go to state 52
    IDENT    shift, and go to state 53

    bool_exp        go to state 54
    rel_and_exp     go to state 55
    relation_exp    go to state 56
    relation_exp_s  go to state 57
    expression      go to state 58
    mult_expr       go to state 59
    term            go to state 60
    term_2          go to state 61
    term_3          go to state 62
    var             go to state 63


State 32

   27 statement_3: WHILE . bool_exp BEGINLOOP stmt_loop ENDLOOP

    NOT      shift, and go to state 47
    TRUE     shift, and go to state 48
    FALSE    shift, and go to state 49
    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 51
    NUMBER   shift, and go to state 52
    IDENT    shift, and go to state 53

    bool_exp        go to state 64
    rel_and_exp     go to state 55
    relation_exp    go to state 56
    relation_exp_s  go to state 57
    expression      go to state 58
    mult_expr       go to state 59
    term            go to state 60
    term_2          go to state 61
    term_3          go to state 62
    var             go to state 63


State 33

   28 statement_4: DO . BEGINLOOP stmt_loop ENDLOOP WHILE bool_exp

    BEGINLOOP  shift, and go to state 65


State 34

   21 statement: CONTINUE .

    $default  reduce using rule 21 (statement)


State 35

   29 statement_5: READ . var statement_51

    IDENT  shift, and go to state 38

    var  go to state 66


State 36

   32 statement_6: WRITE . var statement_61

    IDENT  shift, and go to state 38

    var  go to state 67


State 37

   22 statement: RETURN . expression

    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 68
    NUMBER   shift, and go to state 52
    IDENT    shift, and go to state 53

    expression  go to state 69
    mult_expr   go to state 59
    term        go to state 60
    term_2      go to state 61
    term_3      go to state 62
    var         go to state 63


State 38

   73 var: IDENT . var_2

    L_SQUARE_BRACKET  shift, and go to state 70

    $default  reduce using rule 75 (var_2)

    var_2  go to state 71


State 39

    3 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS decl_loop END_PARAMS BEGIN_LOCALS decl_loop END_LOCALS BEGIN_BODY statement . SEMICOLON function_2

    SEMICOLON  shift, and go to state 72


State 40

   15 statement: statement_1 .

    $default  reduce using rule 15 (statement)


State 41

   16 statement: statement_2 .

    $default  reduce using rule 16 (statement)


State 42

   17 statement: statement_3 .

    $default  reduce using rule 17 (statement)


State 43

   18 statement: statement_4 .

    $default  reduce using rule 18 (statement)


State 44

   19 statement: statement_5 .

    $default  reduce using rule 19 (statement)


State 45

   20 statement: statement_6 .

    $default  reduce using rule 20 (statement)


State 46

   23 statement_1: var . ASSIGN expression

    ASSIGN  shift, and go to state 73


State 47

   42 relation_exp: NOT . relation_exp_s

    TRUE     shift, and go to state 48
    FALSE    shift, and go to state 49
    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 51
    NUMBER   shift, and go to state 52
    IDENT    shift, and go to state 53

    relation_exp_s  go to state 74
    expression      go to state 58
    mult_expr       go to state 59
    term            go to state 60
    term_2          go to state 61
    term_3          go to state 62
    var             go to state 63


State 48

   44 relation_exp_s: TRUE .

    $default  reduce using rule 44 (relation_exp_s)


State 49

   45 relation_exp_s: FALSE .

    $default  reduce using rule 45 (relation_exp_s)


State 50

   62 term: SUB . term_2

    L_PAREN  shift, and go to state 68
    NUMBER   shift, and go to state 52
    IDENT    shift, and go to state 38

    term_2  go to state 75
    var     go to state 63


State 51

   46 relation_exp_s: L_PAREN . bool_exp R_PAREN
   67 term_2: L_PAREN . expression R_PAREN

    NOT      shift, and go to state 47
    TRUE     shift, and go to state 48
    FALSE    shift, and go to state 49
    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 51
    NUMBER   shift, and go to state 52
    IDENT    shift, and go to state 53

    bool_exp        go to state 76
    rel_and_exp     go to state 55
    relation_exp    go to state 56
    relation_exp_s  go to state 57
    expression      go to state 77
    mult_expr       go to state 59
    term            go to state 60
    term_2          go to state 61
    term_3          go to state 62
    var             go to state 63


State 52

   66 term_2: NUMBER .

    $default  reduce using rule 66 (term_2)


State 53

   68 term_3: IDENT . L_PAREN term_31 R_PAREN
   73 var: IDENT . var_2

    L_PAREN           shift, and go to state 78
    L_SQUARE_BRACKET  shift, and go to state 70

    $default  reduce using rule 75 (var_2)

    var_2  go to state 71


State 54

   24 statement_2: IF bool_exp . THEN stmt_loop statement_21 ENDIF

    THEN  shift, and go to state 79


State 55

   35 bool_exp: rel_and_exp . bool_exp2

    OR  shift, and go to state 80

    $default  reduce using rule 37 (bool_exp2)

    bool_exp2  go to state 81


State 56

   38 rel_and_exp: relation_exp . rel_and_exp2

    AND  shift, and go to state 82

    $default  reduce using rule 40 (rel_and_exp2)

    rel_and_exp2  go to state 83


State 57

   41 relation_exp: relation_exp_s .

    $default  reduce using rule 41 (relation_exp)


State 58

   43 relation_exp_s: expression . comp expression

    EQ   shift, and go to state 84
    NEQ  shift, and go to state 85
    LT   shift, and go to state 86
    GT   shift, and go to state 87
    LTE  shift, and go to state 88
    GTE  shift, and go to state 89

    comp  go to state 90


State 59

   53 expression: mult_expr . expression_2

    SUB  shift, and go to state 91
    ADD  shift, and go to state 92

    $default  reduce using rule 56 (expression_2)

    expression_2  go to state 93


State 60

   57 mult_expr: term . mult_expr_2

    MULT  shift, and go to state 94
    DIV   shift, and go to state 95
    MOD   shift, and go to state 96

    $default  reduce using rule 61 (mult_expr_2)

    mult_expr_2  go to state 97


State 61

   63 term: term_2 .

    $default  reduce using rule 63 (term)


State 62

   64 term: term_3 .

    $default  reduce using rule 64 (term)


State 63

   65 term_2: var .

    $default  reduce using rule 65 (term_2)


State 64

   27 statement_3: WHILE bool_exp . BEGINLOOP stmt_loop ENDLOOP

    BEGINLOOP  shift, and go to state 98


State 65

   28 statement_4: DO BEGINLOOP . stmt_loop ENDLOOP WHILE bool_exp

    IF        shift, and go to state 31
    WHILE     shift, and go to state 32
    DO        shift, and go to state 33
    CONTINUE  shift, and go to state 34
    READ      shift, and go to state 35
    WRITE     shift, and go to state 36
    RETURN    shift, and go to state 37
    IDENT     shift, and go to state 38

    $default  reduce using rule 9 (stmt_loop)

    stmt_loop    go to state 99
    statement    go to state 100
    statement_1  go to state 40
    statement_2  go to state 41
    statement_3  go to state 42
    statement_4  go to state 43
    statement_5  go to state 44
    statement_6  go to state 45
    var          go to state 46


State 66

   29 statement_5: READ var . statement_51

    COMMA  shift, and go to state 101

    $default  reduce using rule 31 (statement_51)

    statement_51  go to state 102


State 67

   32 statement_6: WRITE var . statement_61

    COMMA  shift, and go to state 103

    $default  reduce using rule 34 (statement_61)

    statement_61  go to state 104


State 68

   67 term_2: L_PAREN . expression R_PAREN

    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 68
    NUMBER   shift, and go to state 52
    IDENT    shift, and go to state 53

    expression  go to state 105
    mult_expr   go to state 59
    term        go to state 60
    term_2      go to state 61
    term_3      go to state 62
    var         go to state 63


State 69

   22 statement: RETURN expression .

    $default  reduce using rule 22 (statement)


State 70

   74 var_2: L_SQUARE_BRACKET . expression R_SQUARE_BRACKET

    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 68
    NUMBER   shift, and go to state 52
    IDENT    shift, and go to state 53

    expression  go to state 106
    mult_expr   go to state 59
    term        go to state 60
    term_2      go to state 61
    term_3      go to state 62
    var         go to state 63


State 71

   73 var: IDENT var_2 .

    $default  reduce using rule 73 (var)


State 72

    3 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS decl_loop END_PARAMS BEGIN_LOCALS decl_loop END_LOCALS BEGIN_BODY statement SEMICOLON . function_2

    END_BODY  shift, and go to state 107
    IF        shift, and go to state 31
    WHILE     shift, and go to state 32
    DO        shift, and go to state 33
    CONTINUE  shift, and go to state 34
    READ      shift, and go to state 35
    WRITE     shift, and go to state 36
    RETURN    shift, and go to state 37
    IDENT     shift, and go to state 38

    function_2   go to state 108
    statement    go to state 109
    statement_1  go to state 40
    statement_2  go to state 41
    statement_3  go to state 42
    statement_4  go to state 43
    statement_5  go to state 44
    statement_6  go to state 45
    var          go to state 46


State 73

   23 statement_1: var ASSIGN . expression

    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 68
    NUMBER   shift, and go to state 52
    IDENT    shift, and go to state 53

    expression  go to state 110
    mult_expr   go to state 59
    term        go to state 60
    term_2      go to state 61
    term_3      go to state 62
    var         go to state 63


State 74

   42 relation_exp: NOT relation_exp_s .

    $default  reduce using rule 42 (relation_exp)


State 75

   62 term: SUB term_2 .

    $default  reduce using rule 62 (term)


State 76

   46 relation_exp_s: L_PAREN bool_exp . R_PAREN

    R_PAREN  shift, and go to state 111


State 77

   43 relation_exp_s: expression . comp expression
   67 term_2: L_PAREN expression . R_PAREN

    EQ       shift, and go to state 84
    NEQ      shift, and go to state 85
    LT       shift, and go to state 86
    GT       shift, and go to state 87
    LTE      shift, and go to state 88
    GTE      shift, and go to state 89
    R_PAREN  shift, and go to state 112

    comp  go to state 90


State 78

   68 term_3: IDENT L_PAREN . term_31 R_PAREN

    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 68
    NUMBER   shift, and go to state 52
    IDENT    shift, and go to state 53

    $default  reduce using rule 70 (term_31)

    expression  go to state 113
    mult_expr   go to state 59
    term        go to state 60
    term_2      go to state 61
    term_3      go to state 62
    term_31     go to state 114
    var         go to state 63


State 79

   24 statement_2: IF bool_exp THEN . stmt_loop statement_21 ENDIF

    IF        shift, and go to state 31
    WHILE     shift, and go to state 32
    DO        shift, and go to state 33
    CONTINUE  shift, and go to state 34
    READ      shift, and go to state 35
    WRITE     shift, and go to state 36
    RETURN    shift, and go to state 37
    IDENT     shift, and go to state 38

    $default  reduce using rule 9 (stmt_loop)

    stmt_loop    go to state 115
    statement    go to state 100
    statement_1  go to state 40
    statement_2  go to state 41
    statement_3  go to state 42
    statement_4  go to state 43
    statement_5  go to state 44
    statement_6  go to state 45
    var          go to state 46


State 80

   36 bool_exp2: OR . rel_and_exp bool_exp2

    NOT      shift, and go to state 47
    TRUE     shift, and go to state 48
    FALSE    shift, and go to state 49
    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 51
    NUMBER   shift, and go to state 52
    IDENT    shift, and go to state 53

    rel_and_exp     go to state 116
    relation_exp    go to state 56
    relation_exp_s  go to state 57
    expression      go to state 58
    mult_expr       go to state 59
    term            go to state 60
    term_2          go to state 61
    term_3          go to state 62
    var             go to state 63


State 81

   35 bool_exp: rel_and_exp bool_exp2 .

    $default  reduce using rule 35 (bool_exp)


State 82

   39 rel_and_exp2: AND . relation_exp rel_and_exp2

    NOT      shift, and go to state 47
    TRUE     shift, and go to state 48
    FALSE    shift, and go to state 49
    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 51
    NUMBER   shift, and go to state 52
    IDENT    shift, and go to state 53

    relation_exp    go to state 117
    relation_exp_s  go to state 57
    expression      go to state 58
    mult_expr       go to state 59
    term            go to state 60
    term_2          go to state 61
    term_3          go to state 62
    var             go to state 63


State 83

   38 rel_and_exp: relation_exp rel_and_exp2 .

    $default  reduce using rule 38 (rel_and_exp)


State 84

   47 comp: EQ .

    $default  reduce using rule 47 (comp)


State 85

   48 comp: NEQ .

    $default  reduce using rule 48 (comp)


State 86

   49 comp: LT .

    $default  reduce using rule 49 (comp)


State 87

   50 comp: GT .

    $default  reduce using rule 50 (comp)


State 88

   51 comp: LTE .

    $default  reduce using rule 51 (comp)


State 89

   52 comp: GTE .

    $default  reduce using rule 52 (comp)


State 90

   43 relation_exp_s: expression comp . expression

    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 68
    NUMBER   shift, and go to state 52
    IDENT    shift, and go to state 53

    expression  go to state 118
    mult_expr   go to state 59
    term        go to state 60
    term_2      go to state 61
    term_3      go to state 62
    var         go to state 63


State 91

   55 expression_2: SUB . mult_expr expression_2

    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 68
    NUMBER   shift, and go to state 52
    IDENT    shift, and go to state 53

    mult_expr  go to state 119
    term       go to state 60
    term_2     go to state 61
    term_3     go to state 62
    var        go to state 63


State 92

   54 expression_2: ADD . mult_expr expression_2

    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 68
    NUMBER   shift, and go to state 52
    IDENT    shift, and go to state 53

    mult_expr  go to state 120
    term       go to state 60
    term_2     go to state 61
    term_3     go to state 62
    var        go to state 63


State 93

   53 expression: mult_expr expression_2 .

    $default  reduce using rule 53 (expression)


State 94

   58 mult_expr_2: MULT . term mult_expr_2

    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 68
    NUMBER   shift, and go to state 52
    IDENT    shift, and go to state 53

    term    go to state 121
    term_2  go to state 61
    term_3  go to state 62
    var     go to state 63


State 95

   59 mult_expr_2: DIV . term mult_expr_2

    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 68
    NUMBER   shift, and go to state 52
    IDENT    shift, and go to state 53

    term    go to state 122
    term_2  go to state 61
    term_3  go to state 62
    var     go to state 63


State 96

   60 mult_expr_2: MOD . term mult_expr_2

    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 68
    NUMBER   shift, and go to state 52
    IDENT    shift, and go to state 53

    term    go to state 123
    term_2  go to state 61
    term_3  go to state 62
    var     go to state 63


State 97

   57 mult_expr: term mult_expr_2 .

    $default  reduce using rule 57 (mult_expr)


State 98

   27 statement_3: WHILE bool_exp BEGINLOOP . stmt_loop ENDLOOP

    IF        shift, and go to state 31
    WHILE     shift, and go to state 32
    DO        shift, and go to state 33
    CONTINUE  shift, and go to state 34
    READ      shift, and go to state 35
    WRITE     shift, and go to state 36
    RETURN    shift, and go to state 37
    IDENT     shift, and go to state 38

    $default  reduce using rule 9 (stmt_loop)

    stmt_loop    go to state 124
    statement    go to state 100
    statement_1  go to state 40
    statement_2  go to state 41
    statement_3  go to state 42
    statement_4  go to state 43
    statement_5  go to state 44
    statement_6  go to state 45
    var          go to state 46


State 99

   28 statement_4: DO BEGINLOOP stmt_loop . ENDLOOP WHILE bool_exp

    ENDLOOP  shift, and go to state 125


State 100

    8 stmt_loop: statement . SEMICOLON stmt_loop

    SEMICOLON  shift, and go to state 126


State 101

   30 statement_51: COMMA . var statement_51

    IDENT  shift, and go to state 38

    var  go to state 127


State 102

   29 statement_5: READ var statement_51 .

    $default  reduce using rule 29 (statement_5)


State 103

   33 statement_61: COMMA . var statement_61

    IDENT  shift, and go to state 38

    var  go to state 128


State 104

   32 statement_6: WRITE var statement_61 .

    $default  reduce using rule 32 (statement_6)


State 105

   67 term_2: L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 112


State 106

   74 var_2: L_SQUARE_BRACKET expression . R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 129


State 107

    5 function_2: END_BODY .

    $default  reduce using rule 5 (function_2)


State 108

    3 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS decl_loop END_PARAMS BEGIN_LOCALS decl_loop END_LOCALS BEGIN_BODY statement SEMICOLON function_2 .

    $default  reduce using rule 3 (function)


State 109

    4 function_2: statement . SEMICOLON function_2

    SEMICOLON  shift, and go to state 130


State 110

   23 statement_1: var ASSIGN expression .

    $default  reduce using rule 23 (statement_1)


State 111

   46 relation_exp_s: L_PAREN bool_exp R_PAREN .

    $default  reduce using rule 46 (relation_exp_s)


State 112

   67 term_2: L_PAREN expression R_PAREN .

    $default  reduce using rule 67 (term_2)


State 113

   69 term_31: expression . term_32

    COMMA  shift, and go to state 131

    $default  reduce using rule 72 (term_32)

    term_32  go to state 132


State 114

   68 term_3: IDENT L_PAREN term_31 . R_PAREN

    R_PAREN  shift, and go to state 133


State 115

   24 statement_2: IF bool_exp THEN stmt_loop . statement_21 ENDIF

    ELSE  shift, and go to state 134

    $default  reduce using rule 25 (statement_21)

    statement_21  go to state 135


State 116

   36 bool_exp2: OR rel_and_exp . bool_exp2

    OR  shift, and go to state 80

    $default  reduce using rule 37 (bool_exp2)

    bool_exp2  go to state 136


State 117

   39 rel_and_exp2: AND relation_exp . rel_and_exp2

    AND  shift, and go to state 82

    $default  reduce using rule 40 (rel_and_exp2)

    rel_and_exp2  go to state 137


State 118

   43 relation_exp_s: expression comp expression .

    $default  reduce using rule 43 (relation_exp_s)


State 119

   55 expression_2: SUB mult_expr . expression_2

    SUB  shift, and go to state 91
    ADD  shift, and go to state 92

    $default  reduce using rule 56 (expression_2)

    expression_2  go to state 138


State 120

   54 expression_2: ADD mult_expr . expression_2

    SUB  shift, and go to state 91
    ADD  shift, and go to state 92

    $default  reduce using rule 56 (expression_2)

    expression_2  go to state 139


State 121

   58 mult_expr_2: MULT term . mult_expr_2

    MULT  shift, and go to state 94
    DIV   shift, and go to state 95
    MOD   shift, and go to state 96

    $default  reduce using rule 61 (mult_expr_2)

    mult_expr_2  go to state 140


State 122

   59 mult_expr_2: DIV term . mult_expr_2

    MULT  shift, and go to state 94
    DIV   shift, and go to state 95
    MOD   shift, and go to state 96

    $default  reduce using rule 61 (mult_expr_2)

    mult_expr_2  go to state 141


State 123

   60 mult_expr_2: MOD term . mult_expr_2

    MULT  shift, and go to state 94
    DIV   shift, and go to state 95
    MOD   shift, and go to state 96

    $default  reduce using rule 61 (mult_expr_2)

    mult_expr_2  go to state 142


State 124

   27 statement_3: WHILE bool_exp BEGINLOOP stmt_loop . ENDLOOP

    ENDLOOP  shift, and go to state 143


State 125

   28 statement_4: DO BEGINLOOP stmt_loop ENDLOOP . WHILE bool_exp

    WHILE  shift, and go to state 144


State 126

    8 stmt_loop: statement SEMICOLON . stmt_loop

    IF        shift, and go to state 31
    WHILE     shift, and go to state 32
    DO        shift, and go to state 33
    CONTINUE  shift, and go to state 34
    READ      shift, and go to state 35
    WRITE     shift, and go to state 36
    RETURN    shift, and go to state 37
    IDENT     shift, and go to state 38

    $default  reduce using rule 9 (stmt_loop)

    stmt_loop    go to state 145
    statement    go to state 100
    statement_1  go to state 40
    statement_2  go to state 41
    statement_3  go to state 42
    statement_4  go to state 43
    statement_5  go to state 44
    statement_6  go to state 45
    var          go to state 46


State 127

   30 statement_51: COMMA var . statement_51

    COMMA  shift, and go to state 101

    $default  reduce using rule 31 (statement_51)

    statement_51  go to state 146


State 128

   33 statement_61: COMMA var . statement_61

    COMMA  shift, and go to state 103

    $default  reduce using rule 34 (statement_61)

    statement_61  go to state 147


State 129

   74 var_2: L_SQUARE_BRACKET expression R_SQUARE_BRACKET .

    $default  reduce using rule 74 (var_2)


State 130

    4 function_2: statement SEMICOLON . function_2

    END_BODY  shift, and go to state 107
    IF        shift, and go to state 31
    WHILE     shift, and go to state 32
    DO        shift, and go to state 33
    CONTINUE  shift, and go to state 34
    READ      shift, and go to state 35
    WRITE     shift, and go to state 36
    RETURN    shift, and go to state 37
    IDENT     shift, and go to state 38

    function_2   go to state 148
    statement    go to state 109
    statement_1  go to state 40
    statement_2  go to state 41
    statement_3  go to state 42
    statement_4  go to state 43
    statement_5  go to state 44
    statement_6  go to state 45
    var          go to state 46


State 131

   71 term_32: COMMA . term_31

    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 68
    NUMBER   shift, and go to state 52
    IDENT    shift, and go to state 53

    $default  reduce using rule 70 (term_31)

    expression  go to state 113
    mult_expr   go to state 59
    term        go to state 60
    term_2      go to state 61
    term_3      go to state 62
    term_31     go to state 149
    var         go to state 63


State 132

   69 term_31: expression term_32 .

    $default  reduce using rule 69 (term_31)


State 133

   68 term_3: IDENT L_PAREN term_31 R_PAREN .

    $default  reduce using rule 68 (term_3)


State 134

   26 statement_21: ELSE . stmt_loop

    IF        shift, and go to state 31
    WHILE     shift, and go to state 32
    DO        shift, and go to state 33
    CONTINUE  shift, and go to state 34
    READ      shift, and go to state 35
    WRITE     shift, and go to state 36
    RETURN    shift, and go to state 37
    IDENT     shift, and go to state 38

    $default  reduce using rule 9 (stmt_loop)

    stmt_loop    go to state 150
    statement    go to state 100
    statement_1  go to state 40
    statement_2  go to state 41
    statement_3  go to state 42
    statement_4  go to state 43
    statement_5  go to state 44
    statement_6  go to state 45
    var          go to state 46


State 135

   24 statement_2: IF bool_exp THEN stmt_loop statement_21 . ENDIF

    ENDIF  shift, and go to state 151


State 136

   36 bool_exp2: OR rel_and_exp bool_exp2 .

    $default  reduce using rule 36 (bool_exp2)


State 137

   39 rel_and_exp2: AND relation_exp rel_and_exp2 .

    $default  reduce using rule 39 (rel_and_exp2)


State 138

   55 expression_2: SUB mult_expr expression_2 .

    $default  reduce using rule 55 (expression_2)


State 139

   54 expression_2: ADD mult_expr expression_2 .

    $default  reduce using rule 54 (expression_2)


State 140

   58 mult_expr_2: MULT term mult_expr_2 .

    $default  reduce using rule 58 (mult_expr_2)


State 141

   59 mult_expr_2: DIV term mult_expr_2 .

    $default  reduce using rule 59 (mult_expr_2)


State 142

   60 mult_expr_2: MOD term mult_expr_2 .

    $default  reduce using rule 60 (mult_expr_2)


State 143

   27 statement_3: WHILE bool_exp BEGINLOOP stmt_loop ENDLOOP .

    $default  reduce using rule 27 (statement_3)


State 144

   28 statement_4: DO BEGINLOOP stmt_loop ENDLOOP WHILE . bool_exp

    NOT      shift, and go to state 47
    TRUE     shift, and go to state 48
    FALSE    shift, and go to state 49
    SUB      shift, and go to state 50
    L_PAREN  shift, and go to state 51
    NUMBER   shift, and go to state 52
    IDENT    shift, and go to state 53

    bool_exp        go to state 152
    rel_and_exp     go to state 55
    relation_exp    go to state 56
    relation_exp_s  go to state 57
    expression      go to state 58
    mult_expr       go to state 59
    term            go to state 60
    term_2          go to state 61
    term_3          go to state 62
    var             go to state 63


State 145

    8 stmt_loop: statement SEMICOLON stmt_loop .

    $default  reduce using rule 8 (stmt_loop)


State 146

   30 statement_51: COMMA var statement_51 .

    $default  reduce using rule 30 (statement_51)


State 147

   33 statement_61: COMMA var statement_61 .

    $default  reduce using rule 33 (statement_61)


State 148

    4 function_2: statement SEMICOLON function_2 .

    $default  reduce using rule 4 (function_2)


State 149

   71 term_32: COMMA term_31 .

    $default  reduce using rule 71 (term_32)


State 150

   26 statement_21: ELSE stmt_loop .

    $default  reduce using rule 26 (statement_21)


State 151

   24 statement_2: IF bool_exp THEN stmt_loop statement_21 ENDIF .

    $default  reduce using rule 24 (statement_2)


State 152

   28 statement_4: DO BEGINLOOP stmt_loop ENDLOOP WHILE bool_exp .

    $default  reduce using rule 28 (statement_4)
